# Default server definition
server {
    listen [::]:8080 default_server;
    listen 8080 default_server;
    server_name _;

    root /var/www/html;
    index index.php index.html;

    access_log off;
    error_log /var/log/nginx/error.log warn;
    keepalive_timeout 5;

    # 404 error page
    error_page 404 /404.html;
    location  /404.html {
        internal;
    }

    # Redirect server error pages to the static page /50x.html
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/lib/nginx/html;
    }

    # HTTP Strict Transport Security (HSTS)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # Content Security Policy (CSP) - Less restrictive for local development
    add_header Content-Security-Policy "default-src * 'unsafe-inline' 'unsafe-eval' data: blob:; script-src * 'unsafe-inline' 'unsafe-eval'; connect-src * 'unsafe-inline'; img-src * data: blob: 'unsafe-inline'; frame-src *; style-src * 'unsafe-inline';" always;

    # XSS Protection
    add_header X-XSS-Protection "1";
    # add_header X-XSS-Protection "1; mode=block";

    # Frame Options
    add_header X-Frame-Options "SAMEORIGIN";

    # Content Type Options
    add_header X-Content-Type-Options "nosniff";

    # Referrer Policy
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # Permissions Policy
    add_header Permissions-Policy "geolocation=(self)";

    # Access Control - Allow credentials
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, HEAD' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRF-Token' always;


    # location @tiny {
    #     # rewrite ^(.*) /index.php?$1 last;
    #     try_files /index.php?$args;
    # }

    # location @wp {
    #     try_files $uri $uri/ index.php?q=$uri&$args;
    # }

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to index.php
        try_files $uri $uri/ /index.php?$args;
    }

    # Set the cache-control headers on assets to cache for 5 days
    location ~* \.(ico|css|js|gif|jp?g|png|mp3|aiff|swf|mp4|flv)$ {
        expires 1w;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        log_not_found off;
    }

    location ~ \.json$ {
        add_header Access-Control-Allow-Origin *;
    }

    # pass the PHP scripts to FastCGI server
    location ~ [^/]\.php(/|$) {
        # regex to split $uri to $fastcgi_script_name and $fastcgi_path
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # Check that the PHP script exists before passing it
        try_files $fastcgi_script_name =404;

        # Bypass the fact that try_files resets $fastcgi_path_info
        # see: http://trac.nginx.org/nginx/ticket/321
        set $path_info $fastcgi_path_info;
        fastcgi_param PATH_INFO $path_info;

        fastcgi_index index.php;
        include fastcgi.conf;

        fastcgi_intercept_errors on;
        include fastcgi_params;

        fastcgi_param  X_FORWARDED_FOR    $proxy_add_x_forwarded_for;
        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;

        # expires 1h;
        # add_header Cache-Control "private, must-revalidate, proxy-revalidate";
        # add_header Access-Control-Allow-Origin *;
        log_not_found off;

        fastcgi_pass unix:/run/php-fpm.sock;
    }

    # Deny access to . files, for security
    location ~ /\. {
        log_not_found off;
        deny all;
    }

    # Allow fpm ping and status from localhost
    location ~ ^/(fpm-status|fpm-ping)$ {
        access_log off;
        allow 127.0.0.1;
        deny all;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_pass unix:/run/php-fpm.sock;
    }
}
